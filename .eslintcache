[{"/home/cs/osequi/test-cypress/src/reportWebVitals.ts":"1","/home/cs/osequi/test-cypress/src/App.tsx":"2","/home/cs/osequi/test-cypress/src/components/Template/Template.tsx":"3","/home/cs/osequi/test-cypress/src/index.tsx":"4","/home/cs/osequi/test-cypress/src/components/Home/index.ts":"5","/home/cs/osequi/test-cypress/src/components/Template/index.ts":"6","/home/cs/osequi/test-cypress/src/components/Features/index.ts":"7","/home/cs/osequi/test-cypress/src/components/Home/Home.tsx":"8","/home/cs/osequi/test-cypress/src/components/Features/Features.tsx":"9","/home/cs/osequi/test-cypress/src/components/Content/index.ts":"10","/home/cs/osequi/test-cypress/src/components/Menu/Menu.tsx":"11","/home/cs/osequi/test-cypress/src/components/Content/Content.tsx":"12","/home/cs/osequi/test-cypress/src/hooks/use-xstate-value/index.ts":"13","/home/cs/osequi/test-cypress/src/hooks/use-xstate-value/useXStateValue.ts":"14"},{"size":425,"mtime":1607332898414,"results":"15","hashOfConfig":"16"},{"size":593,"mtime":1607352238108,"results":"17","hashOfConfig":"16"},{"size":2257,"mtime":1607363710355,"results":"18","hashOfConfig":"16"},{"size":478,"mtime":1607333360812,"results":"19","hashOfConfig":"16"},{"size":97,"mtime":1607351397434,"results":"20","hashOfConfig":"16"},{"size":117,"mtime":1607351397438,"results":"21","hashOfConfig":"16"},{"size":117,"mtime":1607351397438,"results":"22","hashOfConfig":"16"},{"size":717,"mtime":1607352141392,"results":"23","hashOfConfig":"16"},{"size":656,"mtime":1607351397438,"results":"24","hashOfConfig":"16"},{"size":112,"mtime":1607351397438,"results":"25","hashOfConfig":"16"},{"size":2794,"mtime":1607369466520,"results":"26","hashOfConfig":"16"},{"size":710,"mtime":1607351397438,"results":"27","hashOfConfig":"16"},{"size":62,"mtime":1607365520764,"results":"28","hashOfConfig":"16"},{"size":624,"mtime":1607365875953,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1x5ook7",{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"34"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/cs/osequi/test-cypress/src/reportWebVitals.ts",[],"/home/cs/osequi/test-cypress/src/App.tsx",[],["63","64"],"/home/cs/osequi/test-cypress/src/components/Template/Template.tsx",["65","66","67"],"import React, { ReactNode, useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { useMediaQuery } from \"react-responsive\";\nimport { useMachine } from \"@xstate/react\";\nimport { Machine } from \"xstate\";\n\n/**\n * Imports other types, components and hooks.\n */\nimport { Menu, menuMachine } from \"../Menu\";\nimport { Content } from \"../Content\";\n\n/**\n * Defines the Template type.\n * @category Components\n * @example\n * Example here...\n */\nexport type TTemplate = {\n  children: ReactNode;\n} & typeof TemplateDefaultProps;\n\n/**\n * Defines the Template default props.\n * @category Components\n * @example\n * Example here...\n */\nconst TemplateDefaultProps = {};\n\n/**\n * Displays the Template.\n * @category Components\n * @component\n * @example\n * return <Template />\n */\nconst Template = (props: TTemplate) => {\n  const { children } = props;\n  const [state, send] = useMachine(menuMachine);\n\n  /**\n   * Checks if homepage is the current route.\n   */\n  const location = useLocation();\n  const route = location?.pathname;\n  const isHomePage = route === \"/\";\n\n  /**\n   * Checks if the device is in portrait mode.\n   */\n  const isPortrait = useMediaQuery({ query: \"(orientation: portrait)\" });\n\n  /**\n   * Updates the `page` typestate on route change.\n   */\n  useEffect(() => {\n    isHomePage ? send(\"HOMEPAGE\") : send(\"NONHOMEPAGE\");\n  }, [isHomePage]);\n\n  /**\n   * Updates the `deviceOrientation` typestate on device rotation.\n   */\n  useEffect(() => {\n    isPortrait ? send(\"PORTRAIT\") : send(\"LANDSCAPE\");\n  }, [isPortrait]);\n\n  return (\n    <>\n      <Menu state={state} />\n      <Content>{children}</Content>\n\n      <hr />\n      <p>Logs:</p>\n      <ul>\n        <li>{`isHomePage: ${isHomePage}`}</li>\n        <li>{`isPortrait: ${isPortrait}`}</li>\n      </ul>\n\n      <hr />\n      <p>How it works:</p>\n      <ul>\n        <li>On the home page the menu is not displayed.</li>\n        <li>On the features page the menu is displayed:</li>\n        <ul>\n          <li>As `default` when the device is in landscape mode.</li>\n          <li>As `link with icon` when the device is in portrait mode.</li>\n        </ul>\n      </ul>\n    </>\n  );\n};\n\nTemplate.defaultProps = TemplateDefaultProps;\n\nexport default Template;\nexport { TemplateDefaultProps };\n","/home/cs/osequi/test-cypress/src/index.tsx",[],["68","69"],"/home/cs/osequi/test-cypress/src/components/Home/index.ts",[],"/home/cs/osequi/test-cypress/src/components/Template/index.ts",[],"/home/cs/osequi/test-cypress/src/components/Features/index.ts",[],["70","71"],"/home/cs/osequi/test-cypress/src/components/Home/Home.tsx",[],"/home/cs/osequi/test-cypress/src/components/Features/Features.tsx",[],"/home/cs/osequi/test-cypress/src/components/Content/index.ts",[],"/home/cs/osequi/test-cypress/src/components/Menu/Menu.tsx",["72","73","74"],"import React from \"react\";\nimport { Machine } from \"xstate\";\n\n/**\n * Imports other types, components and hooks.\n */\nimport { useXStateValue } from \"../../hooks/use-xstate-value\";\n\n/**\n * Defines the Menu type.\n * @category Components\n * @example\n * Example here...\n */\nexport type TMenu = {\n  state: any;\n} & typeof MenuDefaultProps;\n\n/**\n * Defines the Menu default props.\n * @category Components\n * @example\n * Example here...\n */\nconst MenuDefaultProps = {\n  state: null,\n};\n\n/**\n * Defines the context for the menu state.\n * Not really used here. It was borrowed from Typestates, the future syntax of XState.\n * However it makes to better understand what's about this state.\n * @see https://xstate.js.org/docs/guides/typescript.html#using-typescript\n */\ninterface MenuStateContext {\n  /**\n   * On homepage the menu is not displayed.\n   * Everywhere else the menu is displayed.\n   */\n  page?: \"Home\" | \"NonHome\";\n  /**\n   * On portrait the active menu title is displayed together with a hamburger icon.\n   * On landscape the full menu is displayed.\n   */\n  deviceOrientation: \"Portrait\" | \"Landscape\";\n}\n\n/**\n * Defines the menu state schema.\n * The menu can be in one of these states.\n */\ninterface MenuStateSchema {\n  states: {\n    idle: {};\n    hidden: {};\n    default: {};\n    titleWithIcon: {};\n  };\n}\n\n/**\n * Defines the events changing the menu state.\n * In fact, the menu state is changing when the context is changed.\n */\ntype MenuStateChangingEvents =\n  | { type: \"HOMEPAGE\" }\n  | { type: \"NONHOMEPAGE\" }\n  | { type: \"PORTRAIT\" }\n  | { type: \"LANDSCAPE\" };\n\n/**\n * Defines how the menu states transition from a state to another.\n */\nconst menuStateTransitions = {\n  key: \"menu\",\n  initial: \"unknown\",\n  states: {\n    unknown: {\n      on: {\n        \"\": [\n          { target: \"hidden\", cond: \"isHomepage\" },\n          { target: \"default\", cond: \"isNotHomepageAndLandscape\" },\n          { target: \"titleWithIcon\", cond: \"isNotHomepageAndPortrait\" },\n        ],\n      },\n    },\n    hidden: {\n      on: { NONHOMEPAGE: \"unknown\" },\n    },\n    default: {\n      on: {},\n    },\n    titleWithIcon: {},\n  },\n};\n\n/**\n * Defines the menu state machine.\n * This should work, first of all, in the visualizer.\n * @see https://xstate.js.org/viz/?gist=48b26a64f6ce9677bec1037cfec4b487\n */\nconst menuMachine = Machine(menuStateTransitions);\n\n/**\n * Displays the Menu.\n * @category Components\n * @component\n * @example\n * return <Menu />\n */\nconst Menu = (props: TMenu) => {\n  const { state } = props;\n  const stateNormalized = useXStateValue(state);\n  const clx = `Menu Menu${stateNormalized}`;\n  return <div className={clx}>Menu: {JSON.stringify(stateNormalized)}</div>;\n};\n\nMenu.defaultProps = MenuDefaultProps;\n\nexport default Menu;\nexport { MenuDefaultProps, menuMachine, menuStateTransitions };\n","/home/cs/osequi/test-cypress/src/components/Content/Content.tsx",[],"/home/cs/osequi/test-cypress/src/hooks/use-xstate-value/index.ts",[],"/home/cs/osequi/test-cypress/src/hooks/use-xstate-value/useXStateValue.ts",[],{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":5,"column":10,"nodeType":"81","messageId":"82","endLine":5,"endColumn":17},{"ruleId":"83","severity":1,"message":"84","line":59,"column":6,"nodeType":"85","endLine":59,"endColumn":18,"suggestions":"86"},{"ruleId":"83","severity":1,"message":"84","line":66,"column":6,"nodeType":"85","endLine":66,"endColumn":18,"suggestions":"87"},{"ruleId":"75","replacedBy":"88"},{"ruleId":"77","replacedBy":"89"},{"ruleId":"75","replacedBy":"90"},{"ruleId":"77","replacedBy":"91"},{"ruleId":"79","severity":1,"message":"92","line":35,"column":11,"nodeType":"81","messageId":"82","endLine":35,"endColumn":27},{"ruleId":"79","severity":1,"message":"93","line":52,"column":11,"nodeType":"81","messageId":"82","endLine":52,"endColumn":26},{"ruleId":"79","severity":1,"message":"94","line":65,"column":6,"nodeType":"81","messageId":"82","endLine":65,"endColumn":29},"no-native-reassign",["95"],"no-negated-in-lhs",["96"],"@typescript-eslint/no-unused-vars","'Machine' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'send'. Either include it or remove the dependency array.","ArrayExpression",["97"],["98"],["95"],["96"],["95"],["96"],"'MenuStateContext' is defined but never used.","'MenuStateSchema' is defined but never used.","'MenuStateChangingEvents' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"99","fix":"100"},{"desc":"101","fix":"102"},"Update the dependencies array to be: [isHomePage, send]",{"range":"103","text":"104"},"Update the dependencies array to be: [isPortrait, send]",{"range":"105","text":"106"},[1352,1364],"[isHomePage, send]",[1527,1539],"[isPortrait, send]"]